/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dallowayfromadistance;

import org.jsoup.nodes.Document;
import org.jsoup.Jsoup;
import org.jsoup.select.Elements;
import java.util.*;

public class ParenthesisSearch {

    static Document dallowayText;
    public static void main(String[] args) {
        try {
            dallowayText = Jsoup.connect("https://www.gutenberg.org/cache/epub/71865/pg71865-images.html").get();
        } catch (Exception e) {
            System.out.println("Couldn't fetch the file!");
        }

        // load text into a String
        String text = dallowayText.text();
        // System.out.println(text);

        // Elements paragraphs = dallowayText.select("p");
        // System.out.println(paragraphs);

        // num of parantheses
        int parenthesisCount = 0;

        String[] stringPages = text.split("Pg\\s+\\d+");

        ArrayList<String> pages = new ArrayList<>();

        // add pages to ArrayList
        for (int i = 0; i < stringPages.length; i++) {
            pages.add(stringPages[i]);
        }

        // cuts out all the copywrite stuff
        int lastPageIndex = pages.size()-1;
        String lastPage = pages.get(lastPageIndex).substring(0, pages.get(lastPageIndex).indexOf("THE END"));

        ArrayList<String[]> fullSplitText = new ArrayList<>(); 

        // add word arrays to ArrayList
        for (int i = 0; i < pages.size(); i++) {
            fullSplitText.add(stringPages[i].split(" "));
        }

        // for (int i = 0; i < fullSplitText.size(); i++) {
        //     System.out.println(Arrays.toString(fullSplitText.get(i)));
        // }

        // sets last page correctly w/o copywrite stuff
        fullSplitText.set(fullSplitText.size() - 1, lastPage.split(" "));

        // iterate through string to find # of parenthesis
        for (int p = 0; p < fullSplitText.size(); p++) {
            System.out.print("Page " + (p + 3) + ": ");
            parenthesisCount = 0;
            for (int w = 0; w < fullSplitText.get(p).length; w++) {
                if (fullSplitText.get(p)[w].contains("(")) {
                    parenthesisCount++;
                } 
                if (fullSplitText.get(p)[w].contains(")")) {
                    parenthesisCount++;
                }
            }
            System.out.println(parenthesisCount);
        }
    }
}
